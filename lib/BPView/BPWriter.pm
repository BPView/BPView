#!/usr/bin/perl -w
#
# COPYRIGHT:
#
# This software is Copyright (c) 2013 by ovido
#                             <sales@ovido.at>
#
# This file is part of Business Process View (BPView).
#
# (Except where explicitly superseded by other copyright notices)
# BPView is free software: you can redistribute it and/or modify it 
# under the terms of the GNU General Public License as published by 
# the Free Software Foundation, either version 3 of the License, or 
# any later version.
#
# BPView is distributed in the hope that it will be useful, but WITHOUT 
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
# for more details.
#
# You should have received a copy of the GNU General Public License
# along with BPView.  
# If not, see <http://www.gnu.org/licenses/>.


package BPView::BPWriter;

BEGIN {
    $VERSION = '1.000'; # Don't forget to set version and release
}  						# date in POD below!

use strict;
use warnings;
use CGI::Carp qw(fatalsToBrowser);
use File::Spec;
use POSIX qw/strftime/;
use Log::Log4perl;

# for debugging only
use Data::Dumper;



sub new {
	
  my $invocant 	= shift;
  my $class 	= ref($invocant) || $invocant;
  my %options	= @_;
  
  my $self 		= {
  		dir		=> undef,	# directory to search for configs
  		file	=> undef,	# file to read
  		config	=> undef,	# config
  		bpcfg	=> undef,	# business process config 
  };

  for my $key (keys %options){
  	if (exists $self->{ $key }){
  	  $self->{ $key } = $options{ $key };
  	}else{
  	  croak "Unknown option: $key";
  	}
  }
  
  bless $self, $class;
  return $self;
  
}











sub gen_bpaddoncfg {
	
	my $self		= shift;
	my %options 	= @_;
	
	for my $key (keys %options){
		if (exists $self->{ $key }){
			$self->{ $key } = $options{ $key };
		}else{
			croak "Unknown option: $key";
		}
	}
	
	my $yaml = $self->{ 'bpcfg' };
	
	my $time = strftime('%A, %d-%b-%Y %H:%M',localtime); ## outputs 17-Dec-2008 10:08

	my $output = "#######################################################################\n" .
				 "#   Automatically generated config file for Business Process Addon \n" .
				 "#   Generated with: BPView - http://github.com/ovido/BPView    \n" .
				 "#   Generated on: $time    \n" .
				 "#   Do not edit this file manualy!    \n" .
				 "#######################################################################\n\n\n";
	
	foreach my $bp_host (keys %{ $yaml }) {
	
		my $type_var;
		
		if ($yaml->{$bp_host}{'BP'}{'TYPE'} eq "or") {
			$type_var = "|";
		}
		elsif ($yaml->{$bp_host}{'BP'}{'TYPE'} eq "and") {
			$type_var = "&";
		}
		elsif ($yaml->{$bp_host}{'BP'}{'TYPE'} eq "min") {
			$type_var = "+";
		}
		else {
	#TODO!: Error-Handling fÃ¼r TYPE Deklaration
		#	error_msg("You have an error at the TYPE declaration on file: \"$file\". You need to fix it.");
		#	exit;
		}
		
		$output .= "# BP-Definition:  ". $yaml->{$bp_host}{'BP'}{'NAME'} ."\n";
		$output .= "# BP-Description: ". $yaml->{$bp_host}{'BP'}{'DESC'} ."\n";
		$output .= "#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n";
	
		my $bp_text = "$yaml->{$bp_host}{'BP'}{'FILE'} = ";
		if ($yaml->{$bp_host}{'BP'}{'TYPE'} eq "min") {
			$bp_text .= "$yaml->{$bp_host}{'BP'}{'MIND'} of: ";
		}
	
		foreach my $key0 (keys %{ $yaml->{$bp_host}{'HOSTS'} }) {
			foreach my $key1 (keys %{ $yaml->{$bp_host}{'HOSTS'}->{ $key0 } }) {
				if ($key0 eq "BPROC") {
					$bp_text .= "$key1;$key1 $type_var ";
				}
				else {
					$bp_text .= "$key0;$key1 $type_var ";
				}
			}
		}
		$bp_text = substr($bp_text,0,-3," $type_var ");
		$output .= "$bp_text\n";
		$output .= "display $yaml->{$bp_host}{'BP'}{'DISP'};$yaml->{$bp_host}{'BP'}{'FILE'};$yaml->{$bp_host}{'BP'}{'NAME'}\n";
		$output .= "###########################################################################\n\n\n\n";
	
	
	}
	print $output;
}




sub gen_nicfg {

	my $self		= shift;
	my %options 	= @_;
	
	for my $key (keys %options){
		if (exists $self->{ $key }){
			$self->{ $key } = $options{ $key };
		}else{
			croak "Unknown option: $key";
		}
	}
	
	my $yaml	= $self->{ 'bpcfg' };
	my $config	= $self->{ 'config' };
	my $time = strftime('%A, %d-%b-%Y %H:%M',localtime); ## outputs 17-Dec-2008 10:08

	my $output = "#######################################################################\n" .
				 "#   Automatically generated config file for Nagios or Icinga \n" .
				 "#   Generated with: BPView - http://github.com/ovido/BPView    \n" .
				 "#   Generated on: $time    \n" .
				 "#   Do not edit this file manualy!    \n" .
				 "#######################################################################\n\n\n";	










	foreach my $bp_host (keys %{ $yaml }) {

		$output .= "define service {\n";

		if ($yaml->{$bp_host}{'BP'}{'DISP'} > 0) {
			$output .= "                 use                      ". $config->{'bp-addon'}{'generic_service_top'} ."\n";
		}
		else {
			$output .= "                 use                      ". $config->{'bp-addon'}{'generic_service_minor'} ."\n";
		}

		$output .= "                 service_description      ". $bp_host ."\n";
		$output .= "                 check_command            ". $config->{'bp-addon'}{'check_plugin'} . "!". $bp_host ."!". $config->{'bp-addon'}{'bp_output_cfg'} ."\n}\n\n";
	}
	print $output;
}





1;