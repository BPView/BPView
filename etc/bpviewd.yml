#
# This is the main bpviewd configuration file.  It contains the
# configuration directives that give the BPView daemon its 
# instructions.
#


#
# This is the main bpviewd config block which controls the basic
# behaviour of bpviewd. The configuration format is YAML.
#
# Make sure to use correct YAML syntax and especially don't use
# tabs instead of spaces!
#
# The structure and shifting has to be:
# bpviewd:
#   local_host: <local host>
#   local_port: <local port>
#   proto: <tcp|udp>
#   sleep: <seconds>
#   read_chars: <number of characters>
#   cache_host: <cache host>
#   cache_port: <cache port>
#   check_interval: <interval in sec>
#   threads_bp: <number of threads>
#   threads_client: <number of threads>
#   restart_timeout: <seconds>
#   outdated_threshold: <seconds>
#   outdated_time: <seconds> 
#

bpviewd:

#
# local_host: Local host bind address
#    Local ip address to listen for API calls.
#
  local_host: "0.0.0.0"

#
# local_port: Local host bind port
#    Port number to listen for API calls.
#

  local_port: 7777

#
# proto: Protocol to use for API calls
#    valid values are: tcp | udp
#
  
  proto: tcp
  
#
# sleep: Seconds to sleep between runs
#    Number of seconds to wait between "do something" execution 
#    after queue is clear.
#
  
  sleep: 60

#
# read_chars: number of characters to read from daemon
#    Increase this number when dealing with many dashboards and
#    a lot of data (hosts and services).
#
  
  read_chars: 10240

#
# cache_host: Cache host bind address
#    ip address to listen for memcache
#

  cache_host: 127.0.0.1

#
# cache_port: Cache host bind port
#    port to listen for memcache
#

  cache_port: 11211

#
# interval: Check interval in seconds
#    interval in sec
#

  check_interval: 30

#
# threads_bp: Number of threads
#    Number of threads for business process calculation
#

  threads_bp: 10

#
# threads_client: Number of threads
#    Number of threads for client connection handling
#

  threads_client: 1

#
# restart_timeout: Timeout in seconds
#    Number of seconds to wait after monitoring backend restart
#    before fetching data from it. This prevents unknown business
#    processes.
#

  restart_timeout: 300
  
#
# outdated_threshold: Percentage of outdated service checks
#    Percentage of checks not activly checks in last outdated_time
#    seconds. If this threshold is reached the corresponding business
#    process is marked as outdated.
#

  outdated_threshold: 50

#
# outdated_time: Time in seconds
#    Number of seconds which marks a service check as outdated.
#

  outdated_time: 300

# ---

#
# Also make sure to end this file with a newline!
#
